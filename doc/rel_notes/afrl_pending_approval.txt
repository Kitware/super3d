Super3D Release Notes for changes pending release approval by AFRL
==================================================================

This file documents release notes for changes made to Super3D which require
public release approval from AFRL.  After approval, the changes and
corresponding notes below will be incorporated into a public numbered
release version, and the content of this file will be reset.


Updates since last public release
---------------------------------

Depth Library

 * Added depth_map_to_height_map and height_map_to_depth_map conversion
   functions given a camera.

 * Added support for parsing VisualSFM NVM files.

 * Added a separate helper function for loading MAP-Tk landmark PLY files.
   Generalized PLY loading to handle recent MAP-Tk files that contain
   additional fields.

 * Write out depth maps in the VTK-based file format which is read
   by the MAP-Tk GUI and by the CudeDepthMapIntegration tool

 * Optimized the min_search_bound function to make it 30% faster by
   simplifying the logic, switching to integer calculations where reasonable,
   and additional bounds to allow early search termination.

 * Refactored code to save depth maps as VTI files into its own function.

 * Refactored the compute_depth_range function into two components:
   filter_visible_landmarks to filter out landmarks outside of an ROI, and
   compute_depth_range to compute the depth range of all landmarks.
   Previously compute_depth_range both filtered by ROI and computed the range.

 * Added a compute_offset_range function which is similar to
   compute_depth_range but operates in world space in a particular direction.
   It finds the minimum and maximum plane offsets to bound the landmarks
   for a continuum of planes with a given normal direction.

 * Added a new "angled frustum" world space implementation that builds a cost
   volume within a camera frustum with a column of voxels aligned with each
   pixel in the image.  Unlike the standard frustum world space the Z-axis
   is not aligned with the camera principal ray, rather it is align with
   a specified world normal.  As a result the voxels are skewed in space and
   the "slice" parameter represents height above a base plane in the world
   rather than depth from the camera.  This is useful for better sampling in
   mostly planar scenes where plane is not aligned with the camera viewing
   direction.  For example, off-nadir aerial imagery.

Tools

 * Added a new "video_depth" tool that computes depth maps for each
   key frame in a video.  Each depth map is built using a neighborhood
   of frames around the key frame.

 * Updated exhaustive_depth and video_depth tools to optionally use the new
   world_angled_frustum instead of world_frustum to estimate height maps
   instead of depth maps.  The option is controlled in the config file by
   setting "world_plane_normal".  The tools can now write out both depth map
   and height map images regardless of which method is used for estimation.

IMesh Library

 * Added a function to render a mesh with groups as a label image.

Tools

 * Updated the render_depthmap tool to work with MAP-Tk style cameras
   and camera file naming conventions.  Added options to render height map
   images and label map images in addition to depth map images.

 * Added option to exhaustive depth tool to save out VTI files.

Fixes since last public release
-------------------------------

Depth Library

 * Fixed a bug in how cost volumes treat missing data (infinite costs), which
   was causing spikes in depth maps in areas of missing data.
